{"version":3,"sources":["assets/6play.png","components/Header.js","containers/VideoCommentContainer.js","components/CommentsForm.js","redux/actions/actionTypes.js","components/CommentsResult.js","components/Counter.js","components/Footer.js","css/mainStyles.js","App.js","redux/reducers/counterReducer.js","redux/reducers/index.js","redux/reducers/commentReducer.js","index.js","redux/configureStore.js"],"names":["module","exports","Menu","styled","div","Image","img","Header","src","logo","alt","Wrap","VideoCommentContainer","url","playing","controls","light","Form","form","Textearea","textarea","Submit","input","CommentsForm","useState","text","setText","dispatch","useDispatch","onSubmit","e","preventDefault","type","comment","target","reset","value","rows","onChange","Comment","CommentsResult","comments","map","index","key","Button","button","ThumbsUp","span","CounterValue","Counter","counter","useSelector","state","onClick","className","Footer","Column","App","initialSate","rootReducer","combineReducers","action","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b14b69e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/6play.eded1e23.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../assets/6play.png\";\n\nconst Menu = styled.div`\n  font-size: 2em;\n  color: white;\n`;\n\nconst Image = styled.img`\n  width: 4em;\n  padding: 1em 0 1em 0;\n`;\n\nconst Header = () => {\n  return (\n    <Menu>\n      <Image src={logo} alt=\"6play\" />\n    </Menu>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  min-height: 50vh;\n  background-color: black;\n  padding-bottom: 20px;\n`;\n\nconst VideoCommentContainer = ({ url }) => {\n  return (\n    <Wrap>\n      <ReactPlayer url={url} playing controls={true} light={true} />\n    </Wrap>\n  );\n};\n\nVideoCommentContainer.propTypes = {\n  comments: PropTypes.array\n};\n\nexport default VideoCommentContainer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { CREATE_COMMENT } from \"../redux/actions/actionTypes\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n  min-width: 100%;\n  padding: 5px 0 0 0;\n`;\n\nconst Textearea = styled.textarea`\n  height: 20px;\n  width: calc(100% - 22px);\n  padding: 10px;\n  border: 1px solid white;\n  border-radius: 5px;\n`;\n\nconst Submit = styled.input`\n  padding: 0.5em;\n  margin: 1em 0 0 0;\n  font-size: 1em;\n  border: 1px solid white;\n  background-color: black;\n  color: white;\n`;\n\nconst CommentsForm = () => {\n  const [text, setText] = useState(\"\");\n  const dispatch = useDispatch();\n  return (\n    <Form\n      onSubmit={e => {\n        e.preventDefault();\n        if (text) {\n          dispatch({ type: CREATE_COMMENT, comment: text });\n        }\n        e.target.reset();\n        setText(e.target.value);\n      }}\n    >\n      <Textearea rows=\"3\" onChange={e => setText(e.target.value)} />\n      <Submit type=\"submit\" value=\"Commenter\" />\n    </Form>\n  );\n};\n\nexport default CommentsForm;\n","// COMMENT\nexport const CREATE_COMMENT = \"CREATE_COMMENT\";\n\n// COUNTER\nexport const INCREMENT = \"INCREMENT\";\n// export const DECREMENT = \"DECREMENT\";\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  height: 100px;\n  min-width: 100%;\n`;\n\nconst Comment = styled.div`\n  color: white;\n  padding: 10px 0 10px 10px;\n  border-bottom: 2px solid white;\n`;\n\nconst CommentsResult = ({ comments }) => {\n  return (\n    <Wrap>\n      {comments.map((comment, index) => {\n        return <Comment key={index}>{comment}</Comment>;\n      })}\n    </Wrap>\n  );\n};\n\nexport default CommentsResult;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { INCREMENT } from \"../redux/actions/actionTypes\";\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  flex: 1;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: none;\n  margin: 0 5px 0 0;\n`;\n\nconst ThumbsUp = styled.span`\n  color: white;\n  font-size: 18px;\n  padding: 2px 0 5px 0;\n`;\n\nconst CounterValue = styled.span`\n  margin: 0 5px 0 0;\n  width: 15px;\n  color: white;\n`;\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter);\n\n  return (\n    <Wrap>\n      <Button onClick={() => dispatch({ type: INCREMENT })}>\n        <ThumbsUp className=\"material-icons\">thumb_up</ThumbsUp>\n      </Button>\n      <CounterValue>{counter}</CounterValue>\n      {/* <button onClick={() => dispatch({ type: DECREMENT })}>Unvote</button> */}\n    </Wrap>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport CommentsForm from \"../components/CommentsForm\";\nimport CommentsResult from \"../components/CommentsResult\";\nimport Counter from \"../components/Counter\";\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 75px;\n  overflow-y: scroll;\n`;\n\nconst Footer = () => {\n  const comments = useSelector(state => state.comments);\n  return (\n    <Wrap>\n      <Counter />\n      <CommentsForm />\n      <CommentsResult comments={comments} />\n    </Wrap>\n  );\n};\n\nFooter.propTypes = {\n  comments: PropTypes.array\n};\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport VideoCommentContainer from \"./containers/VideoCommentContainer\";\nimport Footer from \"./components/Footer\";\nimport styled from \"styled-components\";\nimport { Column } from \"../src/css/mainStyles\";\n\nconst Wrap = styled.div`\n  height: 100%;\n  min-height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: black;\n`;\n\nconst App = () => {\n  return (\n    <Wrap>\n      <Column />\n      <Column>\n        <Header />\n        <VideoCommentContainer url=\"https://www.youtube.com/watch?v=WFuiKwtzw8I\" />\n        <Footer />\n      </Column>\n      <Column />\n    </Wrap>\n  );\n};\n\nexport default App;\n","import { INCREMENT } from \"../actions/actionTypes\";\n\nconst initialSate = {\n  counter: 0\n};\n\nexport default function counterReducer(state = initialSate, action) {\n  switch (action.type) {\n    case INCREMENT:\n      return { counter: state.counter + 1 };\n    // case DECREMENT:\n    //   return { counter: state.counter - 1 };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport comments from \"./commentReducer\";\nimport counter from \"./counterReducer\";\n\nconst rootReducer = combineReducers({\n  comments,\n  counter\n});\n\nexport default rootReducer;\n","import { CREATE_COMMENT } from \"../actions/actionTypes\";\n\nexport default function commentReducer(state = [], action) {\n  switch (action.type) {\n    case CREATE_COMMENT:\n      return [...state, action.comment];\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <App />\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\n\nexport default function configureStore() {\n  // Add support for Redux dev tools\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\n  );\n}\n"],"sourceRoot":""}